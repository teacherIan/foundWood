:root {
    --base-size: 1.2rem;
    --spacing-unit: calc(var(--base-size) * 0.5);
    --input-font-size: calc(var(--base-size) * 1.8);
    --label-font-size: calc(var(--base-size) * 1.8);
    --header-font-size: calc(2.5vh + 2vw + var(--base-size));
    --button-font-size: calc(1vh + 1vw + var(--base-size) * 0.7);
    --icon-size: calc(var(--base-size) * 3);
    --brown: #8b4513;
    --light_brown: #d2b48c;
    --lightGreen: #d2b48c;
}

* {
    border: none;
    outline: none;
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-family: var(--mainFont);
}

html {
    overflow-y: auto;
    overflow-x: hidden;
    /* Prevent pull-to-refresh on iOS Safari */
    overscroll-behavior-y: contain;
    /* REMOVED: position: fixed that was causing layout issues */
    background: #ffffff !important;
    /* Force white background */
    height: 100%;
}

body {
    /* Additional iOS pull-to-refresh prevention */
    overscroll-behavior-y: contain;
    -webkit-overflow-scrolling: touch;
    /* FIXED: Removed position: fixed and overflow: hidden that caused black background */
    width: 100%;
    height: 100%;
    background: #ffffff !important;
    /* White background with !important to override any conflicts */
    background-color: #ffffff !important;
    /* Double declaration for safety */
}

.app-container,
.appContainer {
    position: relative;
    background: #ffffff !important;
    /* Force white background */
    background-color: #ffffff !important;
    /* Double declaration */
    min-height: 100vh;
    width: 100%;
}

canvas {
    /* Let React Three Fiber Canvas component handle positioning */
    cursor: grab !important;
    z-index: 0 !important;
    /* Remove conflicting positioning - let inline styles take precedence */
}

canvas:active {
    cursor: grabbing;
}

@media (max-width: 1000px) {
    /* Removed mask-image to fix transparent line artifact */
}

/* Loading Animation Keyframes - Optimized for Performance */
@keyframes fadeInUp {
    0% {
        opacity: 0;
        transform: translateY(20px);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes spin-smooth {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

/* Enhanced loading animations with hardware acceleration */
@keyframes fadeInUp {
    0% {
        opacity: 0;
        transform: translate3d(0, 20px, 0);
    }

    100% {
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }
}

/* Loading spinner with smooth rotation */
.loading-spinner {
    width: 40px;
    height: 40px;
    border: 3px solid rgba(119, 72, 28, 0.2);
    border-radius: 50%;
    border-top: 3px solid #77481c;
    margin: 0 auto;
    /* Use transform3d for hardware acceleration */
    transform: translate3d(0, 0, 0);
    will-change: transform;
}

/* Ensure animations use hardware acceleration */
*[style*="animation"] {
    will-change: transform, opacity;
    transform: translate3d(0, 0, 0);
}