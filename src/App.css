:root {
    --base-size: 1.2rem;
    --spacing-unit: calc(var(--base-size) * 0.5);
    --input-font-size: calc(var(--base-size) * 1.8);
    --label-font-size: calc(var(--base-size) * 1.8);
    --header-font-size: calc(2.5vh + 2vw + var(--base-size));
    --button-font-size: calc(1vh + 1vw + var(--base-size) * 0.7);
    --icon-size: calc(var(--base-size) * 3);
    --brown: #8b4513;
    --light_brown: #d2b48c;
    --lightGreen: #d2b48c;
}

* {
    outline: none;
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-family: var(--mainFont);
    /* Optimize all elements for smooth transitions */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
}

html {
    overflow-y: auto;
    overflow-x: hidden;
    /* Prevent pull-to-refresh on iOS Safari */
    overscroll-behavior-y: contain;
    /* REMOVED: position: fixed that was causing layout issues */
    background: #f5f5f5 !important;
    /* Force consistent background color */
    height: 100%;
}

body {
    /* Additional iOS pull-to-refresh prevention */
    overscroll-behavior-y: contain;
    -webkit-overflow-scrolling: touch;
    /* FIXED: Removed position: fixed and overflow: hidden that caused black background */
    width: 100%;
    height: 100%;
    background: #f5f5f5 !important;
    /* Consistent background with theme color */
    background-color: #f5f5f5 !important;
    /* Double declaration for safety */
}

.app-container,
.appContainer {
    position: relative;
    background: #f5f5f5 !important;
    /* Force consistent background color */
    background-color: #ffffff !important;
    /* Double declaration */
    height: 100vh;
    width: 100%;
    overflow: hidden;
}

canvas {
    /* Let React Three Fiber Canvas component handle positioning */
    cursor: grab !important;
    /* Remove z-index override to allow inline styles to work */
    /* Remove conflicting positioning - let inline styles take precedence */
    /* Optimize canvas for smooth animations */
    transform: translateZ(0);
    will-change: filter;
    backface-visibility: hidden;
}

canvas:active {
    cursor: grabbing;
}

@media (max-width: 1000px) {
    /* Removed mask-image to fix transparent line artifact */
}

/* Loading Animation Keyframes - Enhanced for Premium Feel */
@keyframes fadeInUp {
    0% {
        opacity: 0;
        transform: translate3d(0, 30px, 0) scale(0.95);
    }

    60% {
        opacity: 0.8;
        transform: translate3d(0, -5px, 0) scale(1.02);
    }

    100% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
    }
}

/* Smooth exit animation without bounce - fixes jarring motion */
@keyframes fadeOutDown {
    0% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
    }

    100% {
        opacity: 0;
        transform: translate3d(0, -30px, 0) scale(0.95);
    }
}

/* Smooth background container exit - consistent with other elements */
@keyframes fadeOutBackground {
    0% {
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }

    100% {
        opacity: 0;
        transform: translate3d(0, -20px, 0);
    }
}

/* Enhanced spinner animations */
@keyframes spinnerFadeIn {
    0% {
        opacity: 0;
        transform: translate3d(0, 15px, 0) scale(0.7) rotate(0deg);
    }

    50% {
        opacity: 0.8;
        transform: translate3d(0, -2px, 0) scale(1.1) rotate(180deg);
    }

    100% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1) rotate(360deg);
    }
}

@keyframes spin-smooth {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

/* Elegant loading spinner with refined appearance */
.loading-spinner {
    width: 60px;
    height: 60px;
    border: 3px solid rgba(119, 72, 28, 0.15);
    border-radius: 50%;
    border-top: 3px solid #77481c;
    border-right: 3px solid rgba(139, 90, 43, 0.8);
    margin: 0 auto;
    /* Use transform3d for hardware acceleration */
    transform: translate3d(0, 0, 0);
    will-change: transform;
    /* Add subtle shadow for depth */
    box-shadow: 0 2px 8px rgba(119, 72, 28, 0.12);
    /* Smooth edges */
    filter: drop-shadow(0 1px 2px rgba(119, 72, 28, 0.1));
}

/* Ensure animations use hardware acceleration */
*[style*="animation"] {
    will-change: transform, opacity;
    transform: translate3d(0, 0, 0);
}

/* 🎭 ELEGANT LOADING ANIMATIONS - Polished & Refined */

/* Entrance animations with optimized performance */
@keyframes seamlessEntranceTitle {
    0% {
        opacity: 0;
        transform: translate3d(0, 16px, 0) scale(0.98);
    }

    70% {
        opacity: 0.95;
        transform: translate3d(0, -1px, 0) scale(1.003);
    }

    100% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
    }
}

@keyframes seamlessEntranceSubtitle {
    0% {
        opacity: 0;
        transform: translate3d(0, 14px, 0) scale(0.97);
    }

    75% {
        opacity: 0.95;
        transform: translate3d(0, -1px, 0) scale(1.002);
    }

    100% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
    }
}

@keyframes seamlessEntranceTagline {
    0% {
        opacity: 0;
        transform: translate3d(0, 12px, 0) scale(0.98);
    }

    70% {
        opacity: 0.9;
        transform: translate3d(0, -0.5px, 0) scale(1.001);
    }

    100% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
    }
}

@keyframes seamlessEntranceSpinner {
    0% {
        opacity: 0;
        transform: translate3d(0, 12px, 0) scale(0.8) rotate(0deg);
    }

    40% {
        opacity: 0.6;
        transform: translate3d(0, -1px, 0) scale(1.05) rotate(120deg);
    }

    80% {
        opacity: 0.95;
        transform: translate3d(0, 0.5px, 0) scale(1.01) rotate(300deg);
    }

    100% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1) rotate(360deg);
    }
}

@keyframes seamlessEntranceStatus {
    0% {
        opacity: 0;
        transform: translate3d(0, 20px, 0) scale(0.92);
    }

    55% {
        opacity: 0.7;
        transform: translate3d(0, -1px, 0) scale(1.02);
    }

    100% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
    }
}

@keyframes seamlessEntranceQuote {
    0% {
        opacity: 0;
        transform: translate3d(0, 22px, 0) scale(0.96);
        filter: blur(0.5px);
    }

    50% {
        opacity: 0.6;
        transform: translate3d(0, -1px, 0) scale(1.01);
        filter: blur(0.1px);
    }

    100% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
        filter: blur(0px);
    }
}

/* Refined exit animations with elegant, sophisticated transitions */
@keyframes epicFadeOutUp {
    0% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
        filter: blur(0px);
    }

    30% {
        opacity: 0.85;
        transform: translate3d(0, -8px, 0) scale(1.02);
        filter: blur(0.5px);
    }

    70% {
        opacity: 0.4;
        transform: translate3d(0, -20px, 0) scale(0.96);
        filter: blur(1.5px);
    }

    100% {
        opacity: 0;
        transform: translate3d(0, -40px, 0) scale(0.9);
        filter: blur(3px);
    }
}

@keyframes epicFadeOutLeft {
    0% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
        filter: blur(0px);
    }

    40% {
        opacity: 0.75;
        transform: translate3d(-12px, -3px, 0) scale(1.01);
        filter: blur(0.8px);
    }

    100% {
        opacity: 0;
        transform: translate3d(-45px, -8px, 0) scale(0.94);
        filter: blur(2.5px);
    }
}

@keyframes epicFadeOutRight {
    0% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
        filter: blur(0px);
    }

    40% {
        opacity: 0.75;
        transform: translate3d(12px, -3px, 0) scale(1.01);
        filter: blur(0.8px);
    }

    100% {
        opacity: 0;
        transform: translate3d(45px, -8px, 0) scale(0.94);
        filter: blur(2.5px);
    }
}

@keyframes epicSpinnerExit {
    0% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1) rotate(0deg);
        filter: blur(0px);
    }

    25% {
        opacity: 0.9;
        transform: translate3d(0, -4px, 0) scale(1.08) rotate(90deg);
        filter: blur(0.3px);
    }

    60% {
        opacity: 0.5;
        transform: translate3d(0, -12px, 0) scale(1.15) rotate(270deg);
        filter: blur(1.2px);
    }

    100% {
        opacity: 0;
        transform: translate3d(0, -25px, 0) scale(1.25) rotate(360deg);
        filter: blur(3px);
    }
}

@keyframes epicFadeOutDown {
    0% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
        filter: blur(0px);
    }

    35% {
        opacity: 0.8;
        transform: translate3d(0, 6px, 0) scale(1.02);
        filter: blur(0.5px);
    }

    100% {
        opacity: 0;
        transform: translate3d(0, 35px, 0) scale(0.92);
        filter: blur(2.8px);
    }
}

@keyframes epicFadeOutScale {
    0% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
        filter: blur(0px);
    }

    30% {
        opacity: 0.85;
        transform: translate3d(0, -2px, 0) scale(1.06);
        filter: blur(0.4px);
    }

    70% {
        opacity: 0.3;
        transform: translate3d(0, -6px, 0) scale(1.18);
        filter: blur(1.5px);
    }

    100% {
        opacity: 0;
        transform: translate3d(0, -12px, 0) scale(1.35);
        filter: blur(4px);
    }
}

@keyframes epicBackgroundExit {
    0% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
        filter: blur(0px);
    }

    45% {
        opacity: 0.6;
        transform: translate3d(0, -4px, 0) scale(1.01);
        filter: blur(1px);
    }

    80% {
        opacity: 0.2;
        transform: translate3d(0, -10px, 0) scale(1.02);
        filter: blur(2.5px);
    }

    100% {
        opacity: 0;
        transform: translate3d(0, -18px, 0) scale(1.03);
        filter: blur(5px);
    }
}

/* Enhanced epic particle effects for background */
@keyframes epicParticleTrail {
    0% {
        opacity: 0;
        transform: translate(0, 0) scale(0);
        box-shadow: 0 0 0 rgba(139, 90, 43, 0);
    }

    15% {
        opacity: 0.8;
        transform: translate(calc(var(--dx) * 0.15), calc(var(--dy) * 0.15)) scale(1);
        box-shadow: 0 0 6px rgba(139, 90, 43, 0.4);
    }

    85% {
        opacity: 0.3;
        transform: translate(calc(var(--dx) * 0.85), calc(var(--dy) * 0.85)) scale(0.6);
        box-shadow: 0 0 8px rgba(139, 90, 43, 0.2);
    }

    100% {
        opacity: 0;
        transform: translate(var(--dx), var(--dy)) scale(0.2);
        box-shadow: 0 0 4px rgba(139, 90, 43, 0);
    }
}

/* Elegant spinner fade-in animation with gentle rotation */
@keyframes spinnerFadeIn {
    0% {
        opacity: 0;
        transform: translate3d(0, 8px, 0) scale(0.85) rotate(0deg);
    }

    50% {
        opacity: 0.7;
        transform: translate3d(0, -1px, 0) scale(1.03) rotate(180deg);
    }

    100% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1) rotate(360deg);
    }
}

/* Refined spinner fade-out animation */
@keyframes spinnerFadeOut {
    0% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1) rotate(0deg);
    }

    40% {
        opacity: 0.6;
        transform: translate3d(0, -6px, 0) scale(1.1) rotate(180deg);
    }

    100% {
        opacity: 0;
        transform: translate3d(0, -20px, 0) scale(1.2) rotate(360deg);
        filter: blur(2px);
    }
}

/* Polished smooth spin animation with hardware acceleration */
@keyframes spin-smooth {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

/* Elegant loading container fade animations */
@keyframes fadeInUp {
    0% {
        opacity: 0;
        transform: translate3d(0, 20px, 0) scale(0.96);
    }

    60% {
        opacity: 0.8;
        transform: translate3d(0, -1px, 0) scale(1.01);
    }

    100% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
    }
}

@keyframes fadeOutDown {
    0% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
    }

    100% {
        opacity: 0;
        transform: translate3d(0, -15px, 0) scale(0.96);
    }
}

@keyframes fadeOutBackground {
    0% {
        opacity: 1;
        transform: translate3d(0, 0, 0) scale(1);
        filter: blur(0px);
    }

    100% {
        opacity: 0;
        transform: translate3d(0, -8px, 0) scale(0.98);
        filter: blur(2px);
    }
}

/* 🎥 Enhanced Camera Pull-Back Animation with rotation */
@keyframes enhancedCameraZoom {
    0% {
        transform: scale(1) rotate(0deg);
        filter: blur(0px);
    }

    50% {
        transform: scale(0.92) rotate(0.5deg);
        filter: blur(1px);
    }

    100% {
        transform: scale(0.85) rotate(0deg);
        filter: blur(0px);
    }
}

/* 🌫️ Epic Vignette Overlay */
.vignette {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at center, transparent 20%, rgba(0, 0, 0, 0.4) 70%);
    pointer-events: none;
    z-index: 9999;
    animation: vignetteAppear 1.5s ease-out forwards;
}

@keyframes vignetteAppear {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

/* ✨ Epic Particle System */
.particles-container {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
    z-index: 9998;
}

.particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: radial-gradient(circle, #8b5a2b 0%, #77481c 50%, transparent 100%);
    border-radius: 50%;
    animation: epicParticleTrail 1.8s ease-out var(--particle-delay, 0s) forwards;
}

/* 📷 Camera zoom effect for container */
.camera-zoom {
    animation: enhancedCameraZoom var(--epic-duration, 1.2s) ease-in-out forwards;
}

/* Smooth transition states for seamless handoff between entrance and exit animations */
.loading-element-hold {
    /* This class ensures elements maintain their final entrance state smoothly */
    opacity: 1 !important;
    transform: translate3d(0, 0, 0) scale(1) !important;
    transition: none !important;
    animation-fill-mode: forwards !important;
}

.loading-element-entrance {
    /* Initial state for entrance animations */
    opacity: 0;
    animation-fill-mode: forwards;
}

.loading-element-exit {
    /* Ensure exit animations start from the correct state */
    animation-fill-mode: forwards;
}

/* Enhanced entrance animations with better final states */